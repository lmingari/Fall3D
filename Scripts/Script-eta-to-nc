#!/bin/csh
#--------------------------------------------------------------------------
#   Script to convert ETA grib1 files to netCDF.
#
#   Requires:
#     - wgrib and the utility program Grib2nc
#   Format:
#     - GRIB1
#   Pressure levels:
#     - Depends on the model configuration (see eta.configure file)
#   Comments:
#     - ETA gives single files for each forecasted instant
#         (latlon_000, latlon_003,..., latlon_072). These files
#         must be concatened before to run this script using
#         cat latlon* > problemname.grib
#
#--------------------------------------------------------------------------
#
# File: Scripts/Script-eta-to-nc.  Generated from Script-eta-to-nc.in by configure.
#
set SCRIPTNAM=Script-eta-to-nc
set EXEPROG=Grib2nc
set wgrib=NOTFOUND
set prefix=/home/mingari/Fall3d
set exec_prefix=${prefix}
set EXEPATH=${exec_prefix}/bin/$EXEPROG             # Path of the executable
set RUNDIR=/home/mingari/Fall3d/Runs
set DATADIR=/home/mingari/Fall3d/Data
set VER=7.0
set PROBLEMNAME=$1
set GRIBCONFDIR=/home/mingari/Fall3d/Utilities/Grib2nc/config
#
########################################################################
#
#    ************** USER DEFINED PARAMETERS ******************
#
#  List of timesteps to decode
#
set timesteps="0 3 6 9 12 15 18 21 24"     # put as many as required, e.g "0 3 6 9 12 15...."
#
#  Domain and model resolution. Values are used to
#  modify the file eta.configure accordingly
#
set lonmin=-91
set lonmax=-30
set latmin=-65
set latmax=-14
set nx=184
set ny=154
#
#  File names and paths
#
set Gribcnf=${GRIBCONFDIR}/eta.configure              # Model configure file
set GRIBNAME=${DATADIR}/eta-grib/${PROBLEMNAME}.grib  # Original ETA grib1 file (concatened)
set NCNAME=${DATADIR}/eta-nc/${PROBLEMNAME}.eta.nc    # ETA nc output file
set LOGNAME=${DATADIR}/eta-nc/Grib2nc.log             # Grib2nc log output file
#
#  You don't need to change anything below this line
#
#############################################################
#
if ( ${PROBLEMNAME} == '' ) then
  echo 'Usage: '${SCRIPTNAM}' PROBLEMNAME'
  exit
else
  echo ' '
  echo '*** Launching '${SCRIPTNAM}' for '${PROBLEMNAME}' ***'
  echo '*** Time steps: '${timesteps}
  echo ' '
    endif
#
if ( ! -r ${Gribcnf} ) then
  echo 'Error: cannot open file:' ${Gribcnf}
  exit
endif
#
set TMP=${DATADIR}/eta-tmp         # tmp folder
set format=-bin                    # -bin or -text
#
#  1. Decoding using wgrib
#
#
#  1.1. Creates the temporary folder
#
if( -d ${TMP} ) then
  rm -r ${TMP}
endif
mkdir ${TMP}
#
#   1.2. Creates the inventory file
#
set inv_file=${TMP}/all.inv
${wgrib} -s ${GRIBNAME} > ${inv_file}
#
#   1.3. Extract the date YYMMDDHH from first record
#
set date=`grep '1:0:' ${inv_file} | awk '{ \
     date=substr($0,7,8); \
     print date; }'`
#
#   1.4. Decode variables
#
set run_wgrib=1
if( ${run_wgrib} == 1 ) then
#
foreach time ( $timesteps )
#
#   2D variables
#
  foreach var ( UGRD:10 VGRD:10 TMP:2 LAND HGT:sfc PRES:sfc HGT:tropopause )   # List of 2D variables
     set OUTPUT=${TMP}/${var}.${time}
     if( ${var} == UGRD:10) then
       set var = "UGRD"
       set var2 = "10 m above gnd"
     else if( ${var} == VGRD:10) then
       set var = "VGRD"
       set var2 = "10 m above gnd"
     else if( ${var} == TMP:2) then
       set var = "TMP"
       set var2 = "2 m above gnd"
     else if( ${var} == LAND) then
       set var = "LAND"
       set var2 = "sfc"
     else if( ${var} == HGT:sfc) then
       set var = "HGT"
       set var2 = "sfc"
     else if( ${var} == PRES:sfc) then
       set var = "PRES"
       set var2 = "sfc"
     else if( ${var} == HGT:tropopause) then
       set var = "HGT"
       set var2 = "tropopause"
     endif
     if( ${time} == 0) then
        grep ":${var}" ${inv_file} | grep "${var2}" | grep ":anl" | ${wgrib} -i ${GRIBNAME} ${format} -o ${OUTPUT}
     else
        grep ":${var}" ${inv_file} | grep "${var2}" | grep ":${time}hr" | ${wgrib} -i ${GRIBNAME} ${format} -o ${OUTPUT}
     endif
  end
#
#   3D variables
#
  foreach var ( UGRD VGRD VVEL HGT TMP RH )        # List of 3D variables
    foreach lev ( 1000 975 950 925 900 850 700 500 400 300 250 200 150 100 50 )
        set OUTPUT=${TMP}/${var}.${time}.${lev}
        if( ${time} == 0) then
          grep ":${var}:${lev} mb" ${inv_file} | grep ":anl" | ${wgrib} -i ${GRIBNAME} ${format} -o ${OUTPUT}
        else
          grep ":${var}:${lev} mb" ${inv_file} | grep ":${time}hr" | ${wgrib} -i ${GRIBNAME} ${format} -o ${OUTPUT}
        endif
    end
  end
#
end
endif          # end of run_wgrib
#
#  2. Runs Grib2nc
#
#  Gets the number of steps and modifies the eraIn.configure accordingly
#
set nt=-1
foreach step ( ${timesteps} )
  set nt=`expr ${nt} + 1`
end
set GribcnfTMP=${Gribcnf}.tmp
cat ${Gribcnf} | awk -v nt2="$nt" -v lonmin2="$lonmin" -v lonmax2="$lonmax" -v latmin2="$latmin" -v latmax2="$latmax" -v nx2="$nx" -v ny2="$ny" '{ \
         if(index($0,"! subset lonmin")!=0) {print "lonmin "lonmin2"        ! subset lonmin"} \
    else if(index($0,"! subset lonmax")!=0) {print "lonmax "lonmax2"        ! subset lonmax"} \
    else if(index($0,"! subset latmin")!=0) {print "latmin "latmin2"        ! subset latmin"} \
    else if(index($0,"! subset latmax")!=0) {print "latmax "latmax2"        ! subset latmax"} \
    else if(index($0,"! subset nx")!=0)     {print "nx "nx2"                ! subset nx"} \
    else if(index($0,"! subset ny")!=0)     {print "ny "ny2"                ! subset ny"} \
    else if(index($0,"! Number of time steps")!=0) {print "nt "nt2"        ! Number of time steps"} \
    else {print $0} \
    }' > ${GribcnfTMP}
mv ${GribcnfTMP} ${Gribcnf}
#
set run_Grib2nc=1
if( ${run_Grib2nc} == 1 ) then
 ${EXEPATH} ${date} ${LOGNAME} ${Gribcnf} ${NCNAME} ${TMP} eta
endif
#
#  3. Removes the TMP folder
#
rm -rf ${TMP}
